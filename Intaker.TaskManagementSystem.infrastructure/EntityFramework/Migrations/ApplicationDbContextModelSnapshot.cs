// <auto-generated />
using System;
using Intaker.TaskManagementSystem.infrastructure.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Intaker.TaskManagementSystem.infrastructure.EntityFramework.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Intaker.TaskManagementSystem.domain.TaskManagement.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AssignedTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AssignedTo = "User 1",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 18, 18, 7, 49, 770, DateTimeKind.Unspecified).AddTicks(2695), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System",
                            Description = "Task 1 Description",
                            Name = "Task 1",
                            Status = "NotStarted",
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 3, 18, 18, 7, 49, 770, DateTimeKind.Unspecified).AddTicks(2695), new TimeSpan(0, 0, 0, 0, 0)),
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 2,
                            AssignedTo = "User 2",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 18, 18, 7, 49, 770, DateTimeKind.Unspecified).AddTicks(2695), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System",
                            Description = "Task 2 Description",
                            Name = "Task 2",
                            Status = "NotStarted",
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 3, 18, 18, 7, 49, 770, DateTimeKind.Unspecified).AddTicks(2695), new TimeSpan(0, 0, 0, 0, 0)),
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 3,
                            AssignedTo = "User 3",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 18, 18, 7, 49, 770, DateTimeKind.Unspecified).AddTicks(2695), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System",
                            Description = "Task 3 Description",
                            Name = "Task 3",
                            Status = "NotStarted",
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 3, 18, 18, 7, 49, 770, DateTimeKind.Unspecified).AddTicks(2695), new TimeSpan(0, 0, 0, 0, 0)),
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 4,
                            AssignedTo = "User 4",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 18, 18, 7, 49, 770, DateTimeKind.Unspecified).AddTicks(2695), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = "System",
                            Description = "Task 4 Description",
                            Name = "Task 4",
                            Status = "NotStarted",
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 3, 18, 18, 7, 49, 770, DateTimeKind.Unspecified).AddTicks(2695), new TimeSpan(0, 0, 0, 0, 0)),
                            UpdatedBy = "System"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
